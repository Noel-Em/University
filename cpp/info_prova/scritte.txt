Prova pratica

La prova pratica consiste nella scrittura di un programma o frammento di codice che risponda alle specifiche riportate nella traccia fornita all'atto della prova stessa. 
Si può utilizzare materiale didattico, appunti o manuali. 
Data la possibilità che non ci si possa connettere ad Internet durante la prova, si consiglia di portare con sé tutto il materiale didattico che si ritiene opportuno. 
Durante la prova lo studente avrà modo di scrivere, compilare e provare il proprio elaborato nel tempo a disposizione.

Durante la prova sarà fornito anche un tester, ossia un programma che collauda il vostro programma e ce lo spedisce se è sufficiente. 
Si tratta di uno script, il cui attualmente è prova-sorgente-spedisci-data_della_prova.sh. 

Dovrete iniziare a collaudare il vostro programma con il tester a partire dal momento in cui il vostro programma fornirà la funzionalità di stampa. 





Il tester andrà utilizzato nel modo seguente: 

(1) scaricate il tester dalla cartella contenente il materiale dell'appello d'esame a cui state partecipando; 
(2) accedete a tale cartella da questa pagina; 
(3) copiate il tester nella stessa cartella in cui è presente il vostro eseguibile; 
(4) lanciate il tester con la seguente riga di comando: bash prova-sorgente-spedisci-data_della_prova.sh nome_vostro_sorgente.








Per poter accedere alla correzione della prova pratica, il vostro programma dovrà superare un insieme minimo di test, che collaudano solo le funzionalità di base richieste per la sufficienza. 
Se il vostro programma non supera tali test, il tester vi dirà che il vostro programma non è ancora sufficiente per la consegna. 
Se invece li supera, allora il tester ci spedirà il vostro sorgente. 
Se il vostro programma supera l'insieme minimo di test, ma non tutti i test, 
allora il tester (oltre a spedire il vostro sorgente, come spiegato sopra) vi dirà fino a quale funzionalità verrà corretto il vostro programma.

Lo studente può abbandonare la prova anche prima della fine della stessa. 
Se non abbandona, il suo elaborato sarà preso in consegna dal docente, 
ma lo studente avrà comunque ancora la possibilità di decidere di non consegnare dopo la correzione pubblica, come di seguito specificato. 

Al termine del tempo previsto avverrà una correzione pubblica, ossia verrà mostrata una possibile soluzione del compito. 
Ogni algoritmo equivalente a quello mostrato nella correzione è valido per superare la prova. 

Ovviamente l'esito della prova in termini di punti dipenderà dall'aderenza alle specifiche date nella traccia, 
dagli errori introdotti e, in misura minore, dalla efficienza/inefficienza in termini di quantità di codice scritto o numeri di passi effettuati dall'algoritmo realizzato dallo studente. 

Dopo la correzione pubblica, lo studente, ovviamente purché non abbia precedentemente abbandonato, può decidere se farsi correggere il compito o meno. 
Nel caso lo studente scelga di non farsi correggere il compito, 
la prova scritta rimane valida per gli appelli successivi. 

Nel caso invece lo studente decida di farsi correggere il compito, questa scelta conclude l'intero esame, in base alle modalità riportate di seguito. 

Se i vincoli di tempo lo permettono, l'elaborato di ciascuno degli studenti che hanno deciso di farsi correggere il compito viene corretto immediatamente, 
in presenza dello studente stesso. Se i vincoli di tempo non permettono una correzione immediata, tali studenti saranno convocati per la correzione in un secondo momento. 

Quindi, a meno di problemi di tempo, l'intero esame di Programmazione I si conclude il giorno stesso della prova pratica. 

Per ciascuno studente che ha deciso di farsi correggere il compito, l'esito della prova sarà comunicato contestualmente alla correzione dell'elaborato, e, 
in base all'esito della prova pratica e della prova scritta, sarà stabilito l'esito dell'intero esame.

Come regola generale, si può ritentare la prova pratica tutte le volte che si vuole, senza alcun vincolo di alcun tipo, o alcun obbligo di saltare appelli. Se subentreranno problemi di capienza aule, la prova pratica sarà limitata: se si partecipa ad una prova pratica e non la si supera con un voto almeno uguale a 15, allora si è obbligati a saltare solo la prova pratica al successivo appello.
Esecuzione del tester

Il tester esegue una serie di test, uno dopo l'altro. In particolare, se uno dei test fallisce, 
il tester vi riporta e vi spiega il fallimento per quel test, e non esegue i test successivi della serie. 
Una volta che avrete corretto l'errore che fa fallire tale test, ed il test avrà quindi successo, il tester procederà con i test successivi, e così via. 
Per un test che fallisce a causa di un output errato del vostro programma, il tester vi dice quale era l'output atteso, e quale è stato invece l'output del vostro programma. 
Scorrete il contenuto del terminale fino all'inizio dell'output di tale test, per vedere con quale input è avvenuto tale fallimento. 

Una semplice soluzione per cercare l'errore che ha causato il fallimento è quella di fornire lo stesso input manualmente al vostro programma.

Se il vostro programma si blocca nell'esecuzione di un test, allora anche il tester si blocca. 
Interrompete il tester, e, per cercare l'errore che causa il bloccaggio del vostro programma, procedete come nel punto precedente. 

Se, infine, il vostro programma va in loop, siete sostanzialmente nella stessa situazione del punto precedente. 
Interrompete il tester, e, se ormai sono state stampate troppe righe per ritornare all'inizio dell'output del test per cui il vostro programma va in loop, 
rieseguite il tester ed interrompetelo non appena va in loop. Procedete poi come nel caso di output errato del vostro programma. 
Puo' capitare che non riusciate a fermare il tester abbastanza velocemente, e che quindi facciate fatica a ritrovare l'inizio dell'output. 
In questo caso, provate a redirezionare l'output su un file, a fermare il programma dopo qualche secondo (altrimenti va avanti all'infinito), 
e poi a visualizzare il file con un visualizzatore. Col visualizzatore potrete trovare facilmente il primo test in cui ci sono problemi. 





Esecuzione: 
Ad esempio: bash prova-sorgente-spedisci-data_della_prova.sh nome_vostro_sorgente > output; less output.